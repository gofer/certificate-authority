#!/bin/sh

# ライブラリ読み出し
source "$(dirname $0)/library.sh"

# 環境の読み出し
if [ -f "$(dirname $0)/.env" ]; then
  source "$(dirname $0)/.env"
fi

# 設定ファイルのディレクトリ
CONFIG_DIR="${CONFIG_DIR:=.}"

# 初期化
ROOT_CA_DIR="${ROOT_CA_DIR:='/etc/ssl/root_ca'}"
INTER_CA_DIR="${INTER_CA_DIR:='/etc/ssl/inter_ca'}"

# ドメイン名(DN; Distinguished Name)
DN=${DN:='apps.localdomain'}
SUBJECT="/C=JP/CN=$DN"
SAN="DNS:$DN,DNS:app1.apps.localdomain"

# パスフレーズ読み取り
INTER_CA_PASSWORD=''
readPassword \
  "Input intermediate CA passphrase: " \
  INTER_CA_PASSWORD

PASSWORD=''
verifyPassword \
  "Input private key passphrase: " \
  "Verify private key passphrase: " \
  PASSWORD


# 鍵生成
openssl genrsa \
  -batch \
  -passout "pass:$PASSWORD" \
  -out "$DN.private_key.pem" \
  -aes-256-cbc \
  4096

if [ $? -ne 0 ]; then
  echo 'Failed to generate ras key.' > /dev/stderr
  exit 1
fi


# リクエスト
openssl req -new -utf8 \
  -batch \
  -subj "$SUBJECT" \
  -addext "subjectAltName = $SAN" \
  -passin "pass:$PASSWORD" \
  -key "$DN.private_key.pem" \
  -out "$DN.csr"

if [ $? -ne 0 ]; then
  echo 'Failed to generate requeset.' > /dev/stderr
  exit 1
fi


# 署名
openssl ca \
  -batch \
  -config "$CONFIG_DIR/openssl.cfg" \
  -section CA_inter \
  -extensions web_server_ca \
  -md sha256 \
  -days 366 \
  -passin "pass:$INTER_CA_PASSWORD" \
  -keyfile "$INTER_CA_DIR/private/private_key.pem" \
  -cert "$INTER_CA_DIR/certs/inter_ca.crt" \
  -in "$DN.csr" \
  -out "$DN.crt"

if [ $? -ne 0 ]; then
  echo 'Failed to generate certificate.' > /dev/stderr
  exit 1
fi


# チェーン生成
openssl crl2pkcs7 \
  -nocrl \
  -certfile "$DN.crt" \
  -certfile "$INTER_CA_DIR/certs/inter_ca.crt" \
  -certfile "$ROOT_CA_DIR/certs/root_ca.crt" \
  -out "$DN.chain.p7b"

if [ $? -ne 0 ]; then
  echo 'Failed to generate certificate chain.' > /dev/stderr
  exit 1
fi


# Nginx向け証明書チェーン
cat "$DN.crt" > "$DN.chain.crt"
cat "$INTER_CA_DIR/certs/inter_ca.crt" >> "$DN.chain.crt"
cat "$ROOT_CA_DIR/certs/root_ca.crt" >> "$DN.chain.crt"


# パスフレーズレス秘密鍵生成
openssl rsa \
  -passin "pass:$PASSWORD" \
  -in "$DN.private_key.pem" \
  -out "$DN.private_key.nopass.pem"
